 mybatis 逆向工程
	根据数据库表生成的对应的 实体类  xml数据库mapper  和 sqlmap文件
	
开始操作：
	1 首先在reources目录下面下面创建 generatorConfig.xml（maven的pluging会默认在这个目录下面找这个文件）
		内容：
		<?xml version="1.0" encoding="UTF-8"?>
			<!DOCTYPE generatorConfiguration
					PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
					"http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
					<!--如果这里出现红色报错，可以不用管-->

			<generatorConfiguration>
				<!--数据库驱动jar 这里用的是sql 模拟的，如果用mysql，直接换成对应的jar包即可 -->
				<classPathEntry location="E:\Maven\maven_repository\com\microsoft\sqlserver\mssql-jdbc\6.1.0.jre8\mssql-jdbc-6.1.0.jre8.jar" />

				<context id="DB2Tables" targetRuntime="MyBatis3">
					<!--去除注释  因为默认情况下，生成的文件下面会有很多的注释-->
					<commentGenerator>
						<property name="suppressAllComments" value="true" />
					</commentGenerator>

					<!--数据库连接 -->
					<jdbcConnection driverClass="com.microsoft.sqlserver.jdbc.SQLServerDriver"
									connectionURL="jdbc:sqlserver://172.16.73.95:2320" //这里不用指定哪一个数据库，因为下面会有字段设置的，也可以指定
									userId="sa"
									password="Gjk_123456">
					</jdbcConnection>
					<!--默认false
					   Java type resolver will always use java.math.BigDecimal if the database column is of type DECIMAL or NUMERIC.
					 -->
					<javaTypeResolver >
						<property name="forceBigDecimals" value="false" />
					</javaTypeResolver>


					<!--生成实体类-->
					<!--1 targetPackage：设置包名，生成的bean将会在这个包下，如果包不存在，会自动创建-->
					<!--2 targetProject：项目路径，一般是src/main/java，当然也可以是MAVEN，那么就会在target目录生成文件-->
					<javaModelGenerator targetPackage="liu.yang.model.p1" targetProject="src/main/java">
						<property name="enableSubPackages" value="false" />
						<property name="trimStrings" value="true" />
					</javaModelGenerator>


					<!--生成SQLMAP文件 作用好像是如果用到复杂的sql语句可以使用这个类来完成  -->
					<sqlMapGenerator targetPackage="liu.yang.model.p2"  targetProject="src/main/java">
						<property name="enableSubPackages" value="false" />
					</sqlMapGenerator>


					<!--生成mapper.xml文件-->
					<!--1 type：一般是设置成 XMLMAPPER，其实还有别的，不过好像生成的xml格式有点一样-->
					<!--2 注意：如果type是 XMLMAPPER的话，那么节点<context>的targetRuntime属性必须是MyBatis3，否则报错-->
					<javaClientGenerator type="XMLMAPPER" targetPackage="liu.yang.model.p3"  targetProject="src/main/java">
						<property name="enableSubPackages" value="false" />
					</javaClientGenerator>

					<!--对应数据库表 mysql可以加入主键自增 字段命名 忽略某字段等-->
					//注意：这个里面其实还有catalog和schema字段，如果在 jdbcConnection 节点中没有指明那个数据库，
					//那么下面的table中必须有 catalog和schema字段，并且属性值都是数据库名称
					//例如 ：<table catalog="dbo" schema="dbo" tableName="CQuoteDoneLog" domainObjectName="CQuoteDoneLog"> </table>
					//tableName：数据库中表名
					//domainObjectName：对应的的bean 名称
					<table tableName="CQuoteDoneLog" domainObjectName="CQuoteDoneLog">
					</table>
					<table tableName="CQuoteLog" domainObjectName="CQuoteLog">
					</table>

				</context>
			</generatorConfiguration>



			
	2 配置maven：
		加入：
		<build>
			<finalName>mybatis_generator</finalName>
			<plugins>
				<plugin>
					<groupId>org.mybatis.generator</groupId>
					<artifactId>mybatis-generator-maven-plugin</artifactId>
					<version>1.3.2</version>
				</plugin>
			</plugins>
		</build>
		
		这样配置则是找默认路径下面的默认文件，如果需要指定路径和名称需要接在在<version>后面加入：
		<configuration>
			<!--配置文件的位置-->      
			<configurationFile>src/main/resources/mybatis.xml</configurationFile>
			<verbose>true</verbose>
			<overwrite>true</overwrite>
		</configuration>
			
			
		最后就是在idea中找到这个maven项目，然后点击Plugins，双击 mybatis generator 就搞定了
			

			
还要一些说明：可以有空看看 
	参考链接：https://my.oschina.net/lujianing/blog/200135





