参考链接： http://blog.csdn.net/no_then/article/details/39756085

Java 中的堆是 JVM 所管理的最大的一块内存空间，主要用于存放各种类的实例对象。
在 Java 中，堆被划分成两个不同的区域：新生代 ( Young )、老年代 ( Old )。新生代 ( Young ) 又被划分为三个区域：Eden、From Survivor、To Survivor。
这样划分的目的是为了使 JVM 能够更好的管理堆内存中的对象，包括内存的分配以及回收。

堆的内存模型为了：新生代 ：老生代 = 1:2

而新生代又分为 Eden from to 


GC 堆                                                                                  
	Java 中的堆也是 GC 收集垃圾的主要区域。GC 分为两种：Minor GC、Full GC ( 或称为 Major GC )。
	Minor GC 是发生在新生代中的垃圾收集动作，所采用的是复制算法。
	
	Full GC 是发生在老年代的垃圾收集动作，所采用的是标记-清除算法。
	另外，标记-清除算法收集垃圾的时候会产生许多的内存碎片 ( 即不连续的内存空间 )，此后需要为较大的对象分配内存空间时，
	若无法找到足够的连续的内存空间，就会提前触发一次 GC 的收集动作。即 标记-整理