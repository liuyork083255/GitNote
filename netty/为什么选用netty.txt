
首先必须知道：
	BIO->NIO->AIO,他们的演化过程，他们才是原生 java api的方法，而netty都是基于他们原生的api，进行封装然后简化了编程难度。

不选择 JAVA 原生 NIO 的原因：
	1 NIO的类库和 API复杂，工作量大，易出错
	2 额外的技能需求较高，比如多线程编程
	3 NIO Bug，epoll bug会导致Selector空轮回，导致CPU 100%。
		关于这个bug，说是在高版本的 JDK中修复了，但还是有说没有全部修复，反正如果以后选择NIO最好使用高版本的 JDK，
		或者使用框架，比如Netty，因为框架里面采用了修复措施。可参考：http://www.10tiao.com/html/308/201602/401718035/1.html


那选择 Netty 的原因：
	1 API 使用简单
	2 功能强大，预值了多种编解码功能
	3 性能高，目前netty性能和别的相比，综合下来算是最优的啦
	4 稳定，netty修复了已经发现的 jdk的nio所有 bug















