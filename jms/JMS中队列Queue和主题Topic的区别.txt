连接：http://blog.csdn.net/gaohuanjie/article/details/42197703


	队列（Queue）和主题（Topic）是JMS支持的两种消息传递模型：
	1、点对点（point-to-point，简称PTP）Queue消息传递模型：
		在该消息传递模型下，一个消息生产者向消息服务器端一个特定的队列发送消息，一个消费者从该队列中读取消息。在这种模型下，
		消息生产者知道消息消费者的队列并直接将消息发送到消息消费者的队列。这种模型的特点为：
		a、消息目的地类型是队列（即Destination接口实现类实例由Session接口实现类实例通过调用其createQueue方法并传入队列名称而创建），
			消息首先被传送至消息服务器端特定的队列中。
		b、同一个队列可以关联多个消息生产者和消息消费者，但一条消息只能够被一个消息消费者接收；如果多个消息消费者正在监听队列上的消息，
			JMS消息服务器将根据“先来者优先”的原则确定由哪个消息消费者接收下一条消息，消息消费者接收到消息不重复——比如一个消息发布者发布了10个消息，
			两个接收者A和B，那么A和B两个接收者总共会收到10条消息，不重复——也就是说一个Queue可以有很多消息消费者，并且在多个可用的消息消费者中负载均衡；
		c、消息生产者不需要在消息接收者接收该消息期间处于运行状态，消息接收者也不需要在发送消息时处于运行状态；
		d、消息接收者接收的所有消息都需要签收，以通知消息服务器是否已接受。如果消息服务器获知某条消息已经被消息消费者接收，
			那么该消息将从消息服务器端特定的队列中移走；否则该条消息将保留在消息服务器端特定的队列中，一直到消息服务器获知该条消息已被消息消费者接受为止
			（即如果在消息生成者发送消息的时没有消息消费者接收该条消息，那么该消息将保留在消息服务器端特定的队列中，一直到有消息消费者接收该条消息）；
		e、这种消息传递模型是传统意义上的懒模型或轮询模型。在此模型中，消息不是自动推动给消息消费者的，而是要由消息消费者从队列中请求获得。
	2、发布/订阅（publish/subscribe，简称pub/sub）Topic消息传递模型：
			在该消息传递模型下，一个消息发布者向一个特定的消息主题发布消息，
			0或多个对此消息主题感兴趣的并且处于活动状态的消息订阅者或者建立了持久订阅的消息订阅者才可以接收到所发布的消息。在这种模型下，
			发布者和订阅者彼此不知道对方（这种模式好比是匿名公告板）。该模型分Nondurable subscription（非持久订阅）和durable subscription 
			(持久化订阅，即消息消费者已注册了特定的主题目标)2种消息处理方式。这种模型的特点为：
		a、消息目的地类型是主题（即Destination接口实现类实例由Session接口实现类实例通过调用其createTopic方法并传入主题名称而创建），
			消息首先由消息生产者发布至消息服务器中特定的主题中。
		b、与PTP消息传递模型不同，pub/sub消息传递模型允许多个主题订阅者接收同一条消息（即一条消息可以传递给多个消息消费）：
			比如一个消息发布者发布了10个消息，有两个建立了持久订阅(通过Session接口实现类调用createDurableSubscriber方法创建的订阅者)
			的消息订阅者A和B或者有两个在消息发布者发布消息时处于活动状态的消息订阅者A和B，那么A和B两个消息订阅者各收到10条消息，
			也就是说总共会收到20条消息；
		c、在发布者和订阅者之间存在时间依赖性——当消息发布者向特定的消息主题发布消息时只有对此消息主题（Topic）
			感兴趣的并且处于活动状态的订阅者才会接收到所发布的消息（除非订阅者建立了持久的订阅。订阅者建立持久订阅后，
			消息发布者在消息订阅者处于非活动状态时发布的消息将在消息订阅者再次处于活动状态时重新发布以使再度处于活动状态的消息订阅者接收到该消息；
		d、消息订阅者接收的所有消息都需要签收，以通知消息服务器是否已接受（即JMS一直保留消息，直至某个特定主题对应的所有订阅者都接收到消息为止）。
		e、pub/sub消息传递模型基本上是一个推模型。在该模型中，消息服务器会自动将特定主题中的消息广播出去，消息消费者无须通过主动请求或轮询主题的方法来获得新的消息。
			活动状态：消息生产者正在向消息服务器端特定的队列（Queue）或主题（Topic）中发送或发布消息；
			消息消费者正在监听消息服务器端特定的队列（Queue）或主题（Topic）的消息情况。
			无论是Queue模型还是Topic模型，每个模型都通过扩展javax.jms.Destination基类来实现（例如：javax.jms.Queue和Javax.jms.Topic都扩展自该基类）。 
