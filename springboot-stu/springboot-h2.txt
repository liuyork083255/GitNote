参考链接：https://segmentfault.com/a/1190000007002140

1 配置多数据源问题，springboot是可以再启动的时候有多个数据源，如何利用配置文件来生成呢？
	
	spring.datasource.h1.type=com.alibaba.druid.pool.DruidDataSource # 这里这样配置以后，以后config文件里面就不用显示的调用return DruidDataSourceFactory.createDataSource(props);
	spring.datasource.h1.driver-class-name=com.mysql.jdbc.Driver
	spring.datasource.h1.url=jdbc:mysql://172.16.66.120:3306/liu_yang?zeroDateTimeBehavior=convertToNull&useUnicode=true&characterEncoding=utf-8
	spring.datasource.h1.username=root
	spring.datasource.h1.password=123456

	mybatis.type-aliases-package=com.sumsoce.liuyork.h2.models
	mybatis.mapper-locations=classpath:mapping/*.xml

	# h2 datasource config
	spring.datasource.type=com.alibaba.druid.pool.DruidDataSource # 数据源类型，可以druid，也可以是dpcp c3p0之类的
	spring.datasource.driver-class-name=org.h2.Driver             # h2 的引擎
	spring.datasource.url=jdbc:h2:mem:test                        # 后面的test是数据库名称
	spring.datasource.username=root                               # 这个是用于登录web管理页面的账号
	spring.datasource.password=123456							  # 这个是用于登录web管理页面的密码
	spring.datasource.schema=classpath:/sql/schema.sql			  # 指定启动时加载的建表语句      这个配置并非针对h2，适用于所有数据库，比如mysql
	spring.datasource.data=classpath:/sql/init_spread_codes.sql   # 指定启动时加载的insert语句    这个配置并非针对h2，适用于所有数据库，比如mysql
	spring.h2.console.path=/h2-console                            # 这个配置是访问h2的管理页面，/前面是项目的url，所以完整的就是 url/h2-console
	spring.h2.console.enabled=true                                # web页面默认是关闭的，显示开启
	
	可以看到有两个属于源，一个是mysql 一个是h2，
	配置java类比如dataSourceConfig文件需要指定数据源bean的名称，因为默认dataSource，为了防止不冲突，最好起名
	比如添加mysql+mybatis的配置：
		@Bean(name="dataSource1") // 重命名
		@ConfigurationProperties(prefix="spring.datasource.h1")       //这个注解很好用，可以指定加载配置文件中前缀的配置项
		public DataSource mysqlDataSource() {
			return DataSourceBuilder.create().build();                // 这里直接就可以返回了，不用显示用druid来创建bean了
		}
		//下面这个bean配置mybatis的映射关系
		@Bean
		public SqlSessionFactory sqlSessionFactory(@Qualifier("dataSource1") DataSource dataSource) throws Exception{   //这里也蛮好，可以指定参数bean类型
			SqlSessionFactoryBean fb = new SqlSessionFactoryBean();
			fb.setDataSource(dataSource);
			fb.setTypeAliasesPackage(mPackage);
			fb.setMapperLocations(new PathMatchingResourcePatternResolver().getResources(mLocations));
			return fb.getObject();
		}
	添加h2配置
		@Bean(name="dataSource")   // 默认就是这个名称
		@ConfigurationProperties(prefix="spring.datasource")   // 默认就是这个前缀
		@Primary                 // 当有多个数据源的时候，必须加上这个注解，让容器默认加载哪个
		public DataSource h2DataSource(){
			DataSource build = DataSourceBuilder.create().build();
			return build;
		}

		@Bean(name = "jdbcHDataSource")            	//这里h2用的是JdbcTemplate来操作数据库的
		public JdbcTemplate getBusinessJdbcTemplate(@Qualifier("dataSource") DataSource dataSource){
			return new JdbcTemplate(dataSource);
		}

		这个时候两个数据库就配置好了，mysql的使用很简单，就是利用mapper接口，使用h2的数据源的时候，比如
				@Autowired
				@Qualifier("jdbcHDataSource")
				private JdbcTemplate jdbcTemplate;
			然后使用jdbcTemplate就可以操作数据库了

特别注意：
	如果h2结合jpa开发，会很有意思，那就是测试下来，jpa机制会默认根据配置好的bean对象创建表，这就和shema.sql冲突了
	所以显示的关闭这个功能：spring.jpa.hibernate.ddl-auto=none




如果是多个数据源还可以利用spring的配置文件来实现：
# 主数据源，默认的
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/test
spring.datasource.username=root
spring.datasource.password=123456

# 更多数据源
	custom.datasource.names=ds1,ds2            # 这是核心配置，可以看到下面的配置都是加上了ds1 ds2，这样利用
	custom.datasource.ds1.driver-class-name=com.mysql.jdbc.Driver
	custom.datasource.ds1.url=jdbc:mysql://localhost:3306/test1
	custom.datasource.ds1.username=root
	custom.datasource.ds1.password=123456

	custom.datasource.ds2.driver-class-name=com.mysql.jdbc.Driver
	custom.datasource.ds2.url=jdbc:mysql://localhost:3306/test2
	custom.datasource.ds2.username=root
	custom.datasource.ds2.password=123456
		
		这样配置以后，就自动注入了三个数据源，一个是默认的dataSource，一个是ds1 ds2，只需要用@Qualifier就可以使用到指定的dataSource了
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
